<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wipcore.Enova.Api.OAuth</name>
    </assembly>
    <members>
        <member name="T:Wipcore.Enova.Api.OAuth.AccountController">
            <summary>
            This controller is used to login customers and admins into Enova. It should put a cookie and token in the response, which should be sent back by the client on subsequent requests. 
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AccountController.LoggedInAs">
            <summary>
            Get information about any logged in user.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AccountController.Logout">
            <summary>
            Logout from Enova.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AccountController.LoginAdmin(Wipcore.Enova.Api.Abstractions.Models.LoginModel)">
            <summary>
            Login as an administrator.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AccountController.LoginCustomer(Wipcore.Enova.Api.Abstractions.Models.LoginModel)">
            <summary>
            Login as a customer.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AccountController.Forbidden(System.String)">
            <summary>
            Error message redirect when unauthorized. Don't call directly.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AccountController.LoginCustomerWithAdminCredentials(Wipcore.Enova.Api.Abstractions.Models.LoginCustomerWithAdminCredentialsModel)">
            <summary>
            Login as a customer by providing a customer identifier, and the alias and password of an administrator.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Wipcore.Enova.Api.OAuth.AuthService">
            <summary>
            This services handles logging in and the setting and getting of claims.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AuthService.BuildClaimsPrincipal(Wipcore.Core.SessionObjects.User,System.Boolean,System.String)">
            <summary>
            Save claims (attributes) on the logged in user.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AuthService.AuthorizeAccess(System.String)">
            <summary>
            Returns true if the logged in user is an administrator, or if enovaObjectOwnedByIdentifier is the same as the logged in user. 
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AuthService.AuthorizeAccess``1(Wipcore.Core.SessionObjects.Context,System.Collections.Generic.Dictionary{System.String,System.Object},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Returns true if the logged in user is an administrator, or if the object has ownerproperty that is the same as the loggedinuser.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AuthService.AuthorizeAccess``1(Wipcore.Core.SessionObjects.Context,System.String,System.Int32,System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Returns true if the logged in user is an administrator, or if the object has ownerproperty that is the same as the loggedinuser by identifier OR id. 
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.AuthService.AuthorizeUpdate(System.String,System.String)">
            <summary>
            Returns true if the logged in user is an adminstrator, 
            or if the logged in user is the same as the user owning the object, and the same as the user being set to own the object.
            </summary>
            <param name="enovaObjectOwnedByIdentifier">The user who owns the object to update, for example a customer on an order.</param>
            <param name="specifiedOwner">The user who is being set as owner for the object, for example a customer on a new order.</param>
            <returns></returns>
        </member>
        <member name="T:Wipcore.Enova.Api.OAuth.CustomerBodyIdentifierPolicy">
            <summary>
            This policy specifices that a logged in customer can only see it's own information. User taken from identifier parameter in body.
            Admins can see all information.
            </summary>
        </member>
        <member name="T:Wipcore.Enova.Api.OAuth.CustomerUrlIdentifierPolicy">
            <summary>
            This policy specifices that a logged in customer can only see it's own information. User taken from identifier parameter in url.
            Admins can see all information.
            </summary>
        </member>
        <member name="T:Wipcore.Enova.Api.OAuth.CustomerUrlIdPolicy">
            <summary>
            This policy specifices that a logged in customer can only see it's own information. User taken from id parameter in url.
            Admins can see all information.
            </summary>
        </member>
        <member name="T:Wipcore.Enova.Api.OAuth.EnovaSystemFacade">
            <summary>
            Provides an easy way to start up an Enova system.
            </summary>
        </member>
        <member name="P:Wipcore.Enova.Api.OAuth.EnovaSystemFacade.Connection">
            <summary>
            The Enova connection
            Use the set only in unit tests
            </summary>
        </member>
        <member name="P:Wipcore.Enova.Api.OAuth.EnovaSystemFacade.Current">
            <summary>
            Get the singleton instance of the Enova system facade. You can use this
            property in cases where you cannot use constructor injection.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.OAuth.EnovaSystemFacade.Start">
            <summary>
            Starts the Enova system.
            </summary>
        </member>
    </members>
</doc>
