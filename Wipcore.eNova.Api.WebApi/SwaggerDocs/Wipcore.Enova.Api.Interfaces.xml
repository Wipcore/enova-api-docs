<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wipcore.Enova.Api.Interfaces</name>
    </assembly>
    <members>
        <member name="T:Wipcore.Enova.Api.Interfaces.EnovaApiController">
            <summary>
            Base controller for the Enova Api. Derive from to create new controllers with similar behaviour as standard controllers. 
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAttributeService.GetAttributes``1(System.String)">
            <summary>
            Get attributes of the object with the given identifier.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.Login(Wipcore.Enova.Api.Models.Interfaces.ILoginModel,System.Boolean)">
            <summary>
            Login user by information in model. Returns a claimprincipal with the claims of the logged in user.
            </summary>
            <param name="model"></param>
            <param name="admin">True to log in as an administrator.</param>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.LoginCustomerAsAdmin(Wipcore.Enova.Api.Models.Interfaces.ILoginCustomerWithAdminCredentialsModel)">
            <summary>
            Log in a customer with the credentials of an admin, ie inpersonation.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.GetLoggedInAlias">
            <summary>
            Get the alias of any logged in user. Returns null if no-one logged in.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.GetLoggedInName">
            <summary>
            Get the name of any logged in user. Returns null if no-one logged in.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.GetLoggedInIdentifier">
            <summary>
            Get the identifier of any logged in user. Returns null if no-one logged in.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.GetLoggedInRole">
            <summary>
            Get the role of any logged in user. Returns null if no-one logged in.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.IsLoggedInAsAdmin">
            <summary>
            Returns true if the logged in user is an admin.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.IsLoggedInAsCustomer">
            <summary>
            Returns true if the logged in user is a customer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.GetClaim(System.String)">
            <summary>
            Get a claim on the logged in user by name.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.GetPasswordHash">
            <summary>
            Get hashed value of logged in user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.LogUser">
            <summary>
            Returns a user friendly logging message for the logged in user.. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.AuthorizeAccess(System.String)">
            <summary>
            Returns true if the current logged in user is authorized to access, by comparing with the given owner.
            </summary>
            <param name="enovaObjectOwnedByIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IAuthService.AuthorizeUpdate(System.String,System.String)">
            <summary>
            Returns true if the current logged in user is authorized to update, by comparing with the given owner.
            </summary>
            <param name="enovaObjectOwnedByIdentifier">The current owner of the object.</param>
            <param name="specifiedOwner">The owner specified to own the object after update.</param>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.ICartService.CalculateCart(Wipcore.Enova.Api.Models.Interfaces.Cart.ICartModel)">
            <summary>
            Maps given model to a cart in Enova and returns a model with prices specified.  
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.ICartService.MapCart(Wipcore.Core.SessionObjects.Context,Wipcore.Enova.Core.EnovaCart,Wipcore.Enova.Api.Models.Interfaces.Cart.ICalculatedCartModel)">
            <summary>
            Map order rows between cart and model.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.ICartService.GetCartsByCustomer(System.String)">
            <summary>
            Get all carts belonging to given customer.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IContextService.GetContext">
            <summary>
            Get an EnovaContext for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.ICustomerService.SaveCustomer(Wipcore.Enova.Api.Models.ContextModel,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Saves a customer with given values.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.ICustomerService.GetAddresses(System.String,System.Nullable{Wipcore.Enova.Core.EnovaCustomerAddress.AddressTypeEnum})">
            <summary>
            Get addresses belonging to given customer.
            </summary>
        </member>
        <member name="T:Wipcore.Enova.Api.Interfaces.IEnovaApiModule">
            <summary>
            Autofac module to register classes in the API.
            </summary>
        </member>
        <member name="P:Wipcore.Enova.Api.Interfaces.IEnovaApiModule.Priority">
            <summary>
            The priority for loading this module, lower priority is loaded first (which means higher priority can override previous registrations).
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IExceptionService.HandleControllerException(Microsoft.AspNet.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Handles a controller exception by setting response code, message, and logging it.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IExceptionService.GetStatusCodeForException(System.Exception)">
            <summary>
            Get an appropriate status code for the given exception. (I.E 404 for not found object).
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IFilterService.Filter(Wipcore.Core.SessionObjects.BaseObjectList,System.String)">
            <summary>
            Filter the given objects by the given filter string.
            </summary>
            <param name="objects"></param>
            <param name="filter">I.E: Name=myfinename</param>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IMappingFromEnovaService.MapFromEnovaObject(Wipcore.Core.SessionObjects.BaseObjectList,System.String)">
            <summary>
            Maps given enova objects with the comma-seperated properties into dictionaries.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IMappingFromEnovaService.MapFromEnovaObject(Wipcore.Core.SessionObjects.BaseObject,System.String)">
            <summary>
            Maps given enova object with the comma-seperated properties into a dictionary of property-value.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IMappingToEnovaService.MapToEnovaObject(Wipcore.Core.SessionObjects.BaseObject,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Maps given properties in dictionary to the given enova object.
            </summary>
        </member>
        <member name="T:Wipcore.Enova.Api.Interfaces.IObjectService">
            <summary>
            Service for getting and saving objects to Enova.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IObjectService.Get``1(Wipcore.Enova.Api.Models.Interfaces.IContextModel,Wipcore.Enova.Api.Models.Interfaces.IGetParametersModel,Wipcore.Core.SessionObjects.BaseObjectList)">
            <summary>
            Get objects from Enova. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="requestContext">Context for the query, ie language.</param>
            <param name="getParameters">Query parameters.</param>
            <param name="candidates">Objects to look at, or null to look at all objects.</param>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IObjectService.Get``1(Wipcore.Enova.Api.Models.Interfaces.IContextModel,Wipcore.Enova.Api.Models.Interfaces.IGetParametersModel,System.String)">
            <summary>
            Get an objects from Enova. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="requestContext">Context for the query, ie language.</param>
            <param name="getParameters">Query parameters.</param>
            <param name="identifier">Object identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IObjectService.Save``1(Wipcore.Enova.Api.Models.Interfaces.IContextModel,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Save an object to Enova with the given values.
            </summary>
            <typeparam name="T">The most derived type of T is saved.</typeparam>
            <param name="requestContext">Context for the query, ie language.</param>
            <param name="values">Properties to save on the object.</param>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IOrderService.SaveOrder(Wipcore.Enova.Api.Models.Interfaces.Cart.ICartModel)">
            <summary>
            Create a new order or update an order. Updates cannot change price/quantity of orderrows, that requires a new order.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IOrderService.GetOrdersByCustomer(System.String,System.String)">
            <summary>
            Get orders owned by given customer.
            </summary>
            <param name="customerIdentifier"></param>
            <param name="shippingStatus">Filter by shippingstatus identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Wipcore.Enova.Api.Interfaces.IPagingService">
            <summary>
            Handles pagination of responses with many objects.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IPagingService.Page(Wipcore.Core.SessionObjects.BaseObjectList,System.Int32,System.Int32)">
            <summary>
            Get a subset/page of a list of objects.
            </summary>
            <param name="objects">Candidate objects to page.</param>
            <param name="pageNumber">The page numer, i.e. page 2 to view objects 20-40 if pagesize is 20.</param>
            <param name="pageSize">The number of objects to get per page.</param>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IPaymentService.SavePayment(Wipcore.Enova.Api.Models.Interfaces.IPaymentModel)">
            <summary>
            Saves a payment from given model.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IProductService.GetVariants(System.String)">
            <summary>
            Get all members of any variant family the given product is a member of. Null if no family exists.
            </summary>
        </member>
        <member name="T:Wipcore.Enova.Api.Interfaces.IPropertyMapper">
            <summary>
            Implement to provide logic for mapping a property.
            </summary>
        </member>
        <member name="P:Wipcore.Enova.Api.Interfaces.IPropertyMapper.Names">
            <summary>
            Names of the properties handled by this mapper.
            </summary>
        </member>
        <member name="P:Wipcore.Enova.Api.Interfaces.IPropertyMapper.Type">
            <summary>
            The type of object that this map handles.
            </summary>
        </member>
        <member name="P:Wipcore.Enova.Api.Interfaces.IPropertyMapper.InheritMapper">
            <summary>
            True if a derived class can use this mapper to map its property. Usually true.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IPropertyMapper.MapFromEnovaProperty(Wipcore.Core.SessionObjects.BaseObject,System.String)">
            <summary>
            Map a property from given object.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IPropertyMapper.MapToEnovaProperty(Wipcore.Core.SessionObjects.BaseObject,System.String)">
            <summary>
            Map a property to given object.        
            </summary>
        </member>
        <member name="P:Wipcore.Enova.Api.Interfaces.IPropertyMapper.Priority">
            <summary>
            Higher number, higher priority for choosing which mapper to use.
            </summary>
        </member>
        <member name="P:Wipcore.Enova.Api.Interfaces.IPropertyMapper.MapType">
            <summary>
            Which sort of mapping this mapper handles.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.ISectionService.GetSubSections(System.String)">
            <summary>
            Get any sub-sections to the section with given identifier.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.ISectionService.GetProducts(System.String)">
            <summary>
            Get any products beloning to the section with given identifier.
            </summary>
        </member>
        <member name="T:Wipcore.Enova.Api.Interfaces.ISortService">
            <summary>
            Handles sorting in responses with many objects.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.ISortService.Sort(Wipcore.Core.SessionObjects.BaseObjectList,System.String)">
            <summary>
            Sort the given objects by the given sort string.
            </summary>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.ITemplateService.GetParametersFromTemplateConfiguration(System.Type,Wipcore.Enova.Api.Models.Interfaces.IGetParametersModel)">
            <summary>
            Read template information from configuration - info of how queries should be processed, I.E default languages, properties etc.
            </summary>
            <param name="type"></param>
            <param name="parameters">Parameters direct from query.</param>
            <returns></returns>
        </member>
        <member name="M:Wipcore.Enova.Api.Interfaces.IWarehouseService.GetWarehouseCompartments(System.String,System.String)">
            <summary>
            Get warehose compartments for the given product. 
            </summary>
            <param name="productIdentifier"></param>
            <param name="warehouseIdentifier">Filter compartments by specific warehose.</param>
            <returns></returns>
        </member>
    </members>
</doc>
